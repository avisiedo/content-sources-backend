# https://docs.docker.com/compose/compose-file/compose-file-v2/
---
version: "2.4"
services:
  postgres:
    image: docker.io/postgres:14
    environment:
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
      - POSTGRES_USER=${DATABASE_USER}
      - POSTGRES_DB=${DATABASE_NAME}
    volumes:
      - postgres:/var/lib/postgresql/data:rw,z
    healthcheck:
      test: ["pg_isready"]
      interval: 5s
      timeout: 3s
      retries: 10
      start_period: 5s
    ports:
      - 5432:5432
    # networks:
    #   - content-services

  kafka-zookeeper:
    hostname: kafka-zookeeper
    image: localhost/kafka:latest
    command: /opt/kafka/scripts/zookeeper-entrypoint.sh
    build:
      context: ..
      dockerfile: kafka/Dockerfile
    environment:
      ZOOKEEPER_CLIENT_PORT: ${ZOOKEEPER_CLIENT_PORT}
      ZOOKEEPER_OPTS: ${ZOOKEEPER_OPTS}
    volumes:
      - "${KAFKA_DATA_DIR}:/tmp/zookeeper:rw,z"
      - "${KAFKA_CONFIG_DIR}:/tmp/config:rw,z"
    ports:
      - 8778:8778
      - 2181:2181
    healthcheck:
      test: ["/opt/kafka/scripts/zookeeper-healthcheck.sh"]
      interval: 5s
      timeout: 3s
      retries: 10
      start_period: 3s
    # networks:
    #   - content-services

  kafka-broker:
    restart: always
    hostname: kafka-broker
    depends_on:
      - kafka-zookeeper
    image: localhost/kafka:latest
    command: /opt/kafka/scripts/kafka-entrypoint.sh
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: kafka-zookeeper:${ZOOKEEPER_CLIENT_PORT}
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      ZOOKEEPER_CLIENT_PORT: ${ZOOKEEPER_CLIENT_PORT}
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_BOOTSTRAP_SERVERS: ${KAFKA_BOOTSTRAP_SERVERS}
      # KAFKA_OPTS: '-javaagent:/usr/jolokia/agents/jolokia-jvm.jar=host=0.0.0.0'
      KAFKA_TOPICS: ${KAFKA_TOPICS}
    ports:
      - 9092:9092
    volumes:
      - "${KAFKA_DATA_DIR}:/tmp/zookeeper:rw,z"
      - "${KAFKA_CONFIG_DIR}:/tmp/config:rw,z"
    # networks:
    #   - content-services

  dnsutil:
    hostname: dnsutil
    image: registry.k8s.io/e2e-test-images/jessie-dnsutils:1.3
    command: sleep 3600
    # networks:
    #   - content-services

volumes:
  postgres:

# networks:
#   content-services:
#     enable_ipv6: false
